{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/game.js","webpack:///./src/index.js","webpack:///./src/player.js","webpack:///./src/stage.js"],"names":[],"mappings":";QAAA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;;QAGA;QACA;;;;;;;;;;;;;AClFA;AAAA;AAAA;AAAA;AAA4B;AACE;;AAEf;AACf;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,qBAAqB,8CAAK;AAC1B,sBAAsB,+CAAM;AAC5B;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,wB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,C;;;;;;;;;;;;ACvJA;AAAA;AAA0B;;AAE1B,IAAI,6CAAI;;;;;;;;;;;;;;;;;;;ACAO;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,qB;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,SAAS;AACT;;AAEA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,a;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,iB;AACA,aAAa;AACb;AACA;AACA;;AAEA;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA,C;;;;;;;;;;;;AC9HA;AAAA;AAAA;AAA8B;;;AAGf;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL,G;;AAEA;AACA;AACA;AACA,C","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/index.js\");\n","import Stage from \"./stage\";\nimport Player from \"./player\";\n\nexport default class Game {\n  constructor() {\n    let canvas = document.getElementById(\"mazer-canvas\");\n    canvas.width = 1100;\n    canvas.height = 700;\n    this.startTime = 0;\n    this.gameOver = false;\n    this.ctx = canvas.getContext(\"2d\");\n    \n    this.registerEvents();\n    this.restart();\n  }\n\n  play() {\n    this.running = true;\n    this.startTime = Date.now();\n    this.animate();\n  }\n\n  restart() {\n    this.running = false;\n    this.stage = new Stage();\n    this.player = new Player();\n    this.animate();\n  }\n\n  registerEvents() {\n    this.boundClickHandler = this.click.bind(this);\n    window.addEventListener(\"mousedown\", this.boundClickHandler);\n    this.music = document.getElementById(\"music\");\n    this.musicBtn = document.getElementById(\"music-btn\");\n    this.musicEvent = this.handleMusic.bind(this);\n    this.musicBtn.addEventListener(\"click\", this.musicEvent);\n  }\n\n  click(e) {\n    if (!this.running) {    \n      this.play();\n      let winScreen = document.getElementsByClassName(\"win-modal\")[0];\n      winScreen.classList.remove(\"is-open\");\n    }\n  }\n\n  checkWin() {\n    if (this.player.xPos > 1026 && this.player.yPos < 56 && this.player.level === 1) {\n      let winScreen = document.getElementsByClassName('win-modal')[0];\n      winScreen.classList.add(\"is-open\");\n      this.running = false;\n      this.restart()\n    }\n  }\n\n  animate() {\n    this.ctx.clearRect(0, 0, 1100, 700);\n    this.checkWin();\n    this.checkBottomCollision();\n    this.checkLeftCollision();\n    this.checkRightCollision();\n    this.checkTopCollision();\n    this.stage.animate(this.ctx);\n    this.player.animate(this.ctx);\n    if (this.running) {\n      requestAnimationFrame(this.animate.bind(this));\n    }\n  }\n\n  checkBottomCollision() {\n    let leftX = this.player.xPos;\n    let rightX = this.player.xPos + 15;\n    let bottomY = this.player.yPos + 15;\n\n    if (\n      this.stage.level[Math.floor(bottomY / 25)][Math.floor(rightX / 25)] === 1\n      ||\n      this.stage.level[Math.floor(bottomY / 25)][Math.floor(leftX / 25)] === 1\n    ) {\n      this.player.collision.bottom = true;\n      this.player.yPos = this.player.prevYPos;\n      this.onGround = true;\n    } else {\n      this.player.collision.bottom = false;\n    }\n  }\n\n  checkLeftCollision() {\n    let leftX = this.player.xPos - 4;\n    let topY = this.player.yPos;\n    let bottomY = this.player.yPos + 15;\n\n    if (\n      this.stage.level[Math.floor(bottomY / 25)][Math.floor(leftX / 25)] === 1 \n      ||\n      this.stage.level[Math.floor(topY / 25)][Math.floor(leftX / 25)] === 1\n    ) {\n      this.player.collision.left = true;\n    //   this.player.xPos = this.player.prevXPos;\n    //   this.player.keys[37] = false\n    } else {\n      this.player.collision.left = false;\n    }\n  }\n\n  checkRightCollision() {\n    let topY = this.player.yPos;\n    let rightX = this.player.xPos + 19;\n    let bottomY = this.player.yPos + 15;\n\n    if (\n      this.stage.level[Math.floor(bottomY / 25)][Math.floor(rightX / 25)] === 1\n      ||\n      this.stage.level[Math.floor(topY / 25)][Math.floor(rightX / 25)] === 1\n    ) {\n      this.player.collision.right = true;\n    //   this.player.xPos = this.player.prevXPos;\n    //   this.player.keys[39] = false;\n    } else {\n      this.player.collision.right = false;\n    }\n  }\n\n  checkTopCollision() {\n    let leftX = this.player.xPos;\n    let topY = this.player.yPos - 3;\n    let rightX = this.player.xPos + 15;\n\n    if (\n      this.stage.level[Math.floor(topY / 25)][Math.floor(rightX / 25)] === 1 \n      ||\n      this.stage.level[Math.floor(topY / 25)][Math.floor(leftX / 25)] === 1\n    ) {\n      this.player.collision.top = true;\n    } else {\n      this.player.collision.top = false;\n    }\n  }\n\n  handleMusic(e) {\n        e.preventDefault()\n        if (this.musicBtn.classList.contains('fa-volume-mute')) {\n            this.music.play();\n            this.musicBtn.classList.remove('fa-volume-mute')\n            this.musicBtn.classList.add('fa-volume-up')\n        } else if (this.musicBtn.classList.contains('fa-volume-up')) {\n            this.music.pause();\n            this.musicBtn.classList.remove('fa-volume-up')\n            this.musicBtn.classList.add('fa-volume-mute')\n        }\n    }\n}","import Game from \"./game\";\n\nnew Game();\n\n\n","\n\nexport default class Player {\n    constructor() {\n        this.gravity = .3;\n        this.xTermV = 3;\n        this.yTermV = 6.5;\n        this.level = 1;\n        this.prevXPos = 0;\n        this.prevYPos = 0\n        this.xPos = 43;\n        this.yPos = 643;\n        this.width = 15;\n        this.height = 15;\n        this.speed = 2;\n        this.xVel = 0;\n        this.yVel = 0;\n        this.keys = {}; \n        this.onGround = false;\n        this.jumping = false;\n        this.collision = {\n            bottom: false,\n            left: false,\n            right: false,\n            top: false\n        }\n    }\n\n    drawPlayer(ctx) {  \n        ctx.beginPath()\n        ctx.fillStyle = 'rgb(0, 230, 230)';\n        ctx.fillRect(this.xPos, this.yPos, this.width, this.height)\n    }\n\n    movePlayer(ctx) {\n        window.addEventListener(\"keydown\", (e) => {\n            \n            this.keys[e.keyCode] = true;\n        });\n        window.addEventListener(\"keyup\", (e) => {\n        \n            this.keys[e.keyCode] = false;\n        });\n\n        if (this.level === 1) {\n            if (!this.collision.right) {\n                if (this.keys[68] && this.xVel < this.xTermV) {\n                    this.xVel += 1;\n                } else {\n                    if (this.xVel > 0) {\n                        this.xVel--;\n                    }\n                }\n            } \n            else if (!this.keys[65]) {\n                this.xVel = 0;\n            }\n            \n            if (!this.collision.left) {\n                if (this.keys[65] && Math.abs(this.xVel) < this.xTermV) {\n                    this.xVel -= 1;\n                } else {\n                    if (this.xVel < 0) {\n                        this.xVel ++;\n                    }\n                }\n            } else if (!this.keys[68]) {\n                this.xVel = 0\n            }\n            \n            if (!this.collision.top && this.onGround) {\n                if (this.keys[87]) {\n                    this.jumping = true;\n                    this.onGround = false;\n                    this.yVel = -this.speed * 3.5\n                }  \n            } else if (this.collision.top) {\n                this.yPos = this.prevYPos;\n                this.yVel = .5\n            }\n            \n            if (this.collision.bottom) {\n                this.onGround = true;\n            } else {\n                this.onGround = false;\n            }\n            \n            if (this.yVel >= 0) {\n                this.jumping = false\n            }\n            \n            if (this.xPos < 25) {\n                this.xPos = 25;\n            } else if (this.xPos > 1060) {\n                this.xPos = 1060;\n            }\n            \n            if (this.yPos < 25) {\n                this.yPos = 25;\n            } else if (this.yPos > 660) {\n                this.yPos = 660;\n            }\n            \n            if (!this.onGround) {\n                this.yVel += this.gravity;\n                if (Math.abs(this.yVel) >= this.yTermV) {\n                    if (this.yVel > 0) {\n                        this.yVel = this.yTermV\n                    }\n                }\n            } else {\n                this.yVel = 0\n            }\n            \n            this.prevXPos = this.xPos;\n            this.prevYPos = this.yPos;\n            this.xPos += this.xVel;\n            this.yPos += this.yVel;\n        }\n    }\n        \n            \n    animate(ctx) {\n        this.movePlayer(ctx)\n        this.drawPlayer(ctx);\n    }\n}","import Player from \"./player\";\n\n\nexport default class Stage {\n  constructor() {\n    this.tileSize = 25;\n    this.level = [\n        [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],\n        [1,0,1,0,0,0,0,1,0,0,0,1,0,0,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,2,2,1],\n        [1,0,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,1,1,1,1,1,1,0,0,0,1,1,0,2,2,1],\n        [1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,0,1,1,1,1,0,0,1,1,0,0,0,0,1,0,1,1,1,0,0,1,1,1],\n        [1,1,0,1,0,0,0,0,1,0,0,0,1,0,0,1,0,0,0,1,1,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,1,1,0,0,1,1],\n        [1,0,0,1,0,0,1,0,0,0,1,0,0,0,0,1,1,1,0,0,1,1,1,0,1,1,0,0,1,1,1,1,1,1,0,0,1,0,1,0,0,1,1,1],\n        [1,0,0,1,0,0,1,1,1,1,1,0,0,1,0,0,0,0,0,1,1,0,0,0,0,0,0,1,1,0,0,0,0,1,1,0,1,0,0,0,0,0,0,1],\n        [1,1,1,1,0,1,1,0,1,0,1,1,1,1,1,0,0,1,0,0,1,0,1,0,0,1,0,0,1,0,0,1,0,0,0,0,1,1,1,1,1,0,0,1],\n        [1,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,1,1,1,1,1,0,1,1,1,0,1,1,1,1,1,1,0,0,0,0,0,1,0,0,0,1],\n        [1,0,0,1,1,0,0,0,1,0,1,0,0,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1,0,0,1,0,1,1,1,0,1,0,0,1,1],\n        [1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,0,1,1,1,1,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,0,1,0,0,0,1],\n        [1,0,0,1,0,0,0,0,1,0,1,0,0,1,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,0,0,0,1,1,1,1,1,0,1,1,1,0,0,1],\n        [1,1,0,0,0,0,1,0,0,0,0,0,1,1,0,0,1,0,0,1,1,0,0,0,0,0,0,0,1,1,0,0,0,1,1,0,0,0,0,1,0,0,0,1],\n        [1,1,0,0,0,1,1,1,1,1,0,0,0,0,0,0,1,0,0,0,1,0,0,1,0,1,0,0,1,0,0,1,0,1,0,0,1,1,1,1,0,0,1,1],\n        [1,1,1,1,1,1,0,1,0,1,0,0,0,0,1,0,1,1,0,0,1,1,0,1,0,0,0,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,1],\n        [1,0,0,0,0,1,0,0,0,0,0,1,1,1,1,1,1,0,0,1,1,1,0,0,0,1,0,0,1,0,0,0,1,0,1,0,0,1,0,1,1,1,1,1],\n        [1,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,1,0,1,1,0,0,0,0,0,1,1,1,1,1,1,0,1,0,1],\n        [1,0,1,0,1,0,0,1,0,1,0,0,1,0,1,0,1,0,1,0,0,1,1,0,0,1,0,0,1,0,0,1,0,0,0,0,0,0,0,1,0,0,0,1],\n        [1,0,0,0,1,1,1,1,1,1,0,0,1,0,1,1,1,1,1,0,1,1,0,0,1,1,0,0,0,0,0,1,1,0,0,0,1,1,1,1,1,1,0,1],\n        [1,1,0,1,1,0,0,0,0,1,1,0,1,1,1,0,0,0,1,0,0,1,0,1,1,1,1,0,0,1,1,1,0,0,1,0,0,0,0,1,0,0,0,1],\n        [1,0,0,0,0,0,1,0,0,1,0,0,0,0,1,0,0,1,1,0,0,1,0,0,1,0,0,0,0,1,0,0,0,0,1,0,0,1,0,0,0,1,0,1],\n        [1,1,0,0,0,1,1,1,0,1,0,0,1,0,0,0,0,0,1,1,0,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],\n        [1,0,0,1,0,0,1,0,0,1,1,1,1,1,1,1,0,0,1,0,0,0,0,1,0,0,1,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,1],\n        [1,0,0,1,1,0,0,0,0,1,0,0,1,0,0,1,1,0,1,0,1,1,0,1,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,1,0,0,0,1],\n        [1,1,0,0,1,1,1,0,0,0,0,0,0,0,0,1,0,0,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1],\n        [1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,1,0,1,1,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,1,0,0,0,1],\n        [1,0,0,1,0,0,0,0,0,1,0,0,1,0,0,1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,1,1],\n        [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]\n    ];\n  }\n  \n  draw(ctx) {\n    this.level.forEach((row, y) => {\n      row.forEach((tile, x) => {\n        let xPos = x * this.tileSize;\n        let yPos = y * this.tileSize;\n        if (tile === 1) {\n          ctx.beginPath();\n          ctx.fillStyle = \"rgb(150, 0, 150)\";\n          ctx.fillRect(xPos, yPos, this.tileSize, this.tileSize);\n          ctx.stroke();\n        } else if (tile === 2) {\n          ctx.beginPath();\n          ctx.fillStyle = \"rgb(0, 200, 0)\";\n          ctx.fillRect(xPos, yPos, this.tileSize, this.tileSize);\n          ctx.stroke();\n        }\n      });\n    });\n  } \n\n  animate(ctx) {\n    this.draw(ctx)\n  }\n}"],"sourceRoot":""}